@import ../../variables/elements/input.variables

//*******************************//
//            Variations
//*******************************//

@mixin input-variant($color, $backgroundColor, $borderColor, $hoverBorderColor, $focusBorderBolor)
    color           : $color
    background-color: $backgroundColor
    border-color    : $borderColor
    
    &::-webkit-input-placeholder
        color: $color
    
    &:-moz-placeholder,
    &:-ms-input-placeholder
        color: $color    
    
    &:hover:hover:hover:hover:hover:not(:focus)
        border-color: $hoverBorderColor !important
    
    &:focus:focus:focus:focus:focus:focus:focus:focus:focus
        border-color       : $focusBorderBolor
        border-bottom-color: $focusBorderBolor

//*******************************//
//              Main
//*******************************//

.ts.input
    position: relative
    display : inline-flex
    color   : $inputTextColor
    
.ts.input,
.ts.form
    &
        input, textarea, *[contenteditable]
            transition   : box-shadow $input_transitionDuration ease-in-out
            line-height  : $inputLineHeight
            border       : $input_border
            padding      : $input_padding
            border-radius: $input_borderRadius
            
            +input-variant($inputTextColor, $input_backgroundColor, $input_borderColor, $input_hoverBorderColor, $input_focusBorderColor)
            
            &::-webkit-input-placeholder
                opacity    : $input_placeholderOpacity

            &:-moz-placeholder,
            &:-ms-input-placeholder
                opacity    : $input_placeholderOpacity

//-------------------//
//       Focus
//-------------------//

.ts.input,
.ts.form
    &
        input:focus, textarea:focus, *[contenteditable]:focus
            &::-webkit-input-placeholder
                opacity: $input_placeholderFocusOpacity

            &:-moz-placeholder,
            &:-ms-input-placeholder
                opacity: $input_placeholderFocusOpacity

.ts.input.focus input, 
.ts.input.focus textarea, 
.ts.input.focus *[contenteditable]
    &::-webkit-input-placeholder
        opacity: $input_placeholderFocusOpacity
        
    &:-moz-placeholder,
    &:-ms-input-placeholder
        opacity: $input_placeholderFocusOpacity

//-------------------//
//       Fitted
//-------------------//

.ts.input.fitted:not(.horizontally):not(.vertically)
    &
        input, textarea, *[contenteditable]
            padding: 0
.ts.input.fitted.horizontally
    &
        input, textarea, *[contenteditable]
            padding-left : 0
            padding-right: 0
.ts.input.fitted.vertically
    &
        input, textarea, *[contenteditable]
            padding-top   : 0
            padding-bottom: 0
    
//-------------------//
//       Basic       
//-------------------//

.ts.form .field.basic,
.ts.input.basic
    &
        input, textarea, *[contenteditable]
            background-color: transparent !important
    
//-------------------//
//     Borderless       
//-------------------//

.ts.input.borderless
    &
        input, textarea, *[contenteditable]
            border: 0
        
//-------------------//
//      Action       
//-------------------//

.ts.input.action > .button,
.ts.input.action > .buttons
    display    : flex
    align-items: center
    flex       : 0 0 auto

.ts.input.action > .ts.button
    border-radius             : $button_borderRadius
    border-top-right-radius   : 0
    border-bottom-right-radius: 0
      
.ts.input.action input + .ts.button, 
.ts.input.action input textarea + .ts.button, 
.ts.input.action input *[contenteditable] + .ts.button
    border-radius            : $button_borderRadius
    border-top-left-radius   : 0
    border-bottom-left-radius: 0

.ts.input.action input,
.ts.input.action textarea, 
.ts.input.action *[contenteditable]
    border-radius             : $input_borderRadius
    border-top-right-radius   : 0
    border-bottom-right-radius: 0

.ts.input.action .ts.button + input, 
.ts.input.action .ts.button + textarea, 
.ts.input.action .ts.button + *[contenteditable]
    border-radius            : $input_borderRadius
    border-top-left-radius   : 0
    border-bottom-left-radius: 0
    
.ts.action.input > .button,
.ts.action.input > .buttons 
    display    : flex
    align-items: center
    flex       : 0 0 auto

.ts.action.input > .button,
.ts.action.input > .buttons > .button 
    padding-top   : $input_verticalPadding
    padding-bottom: $input_verticalPadding
    margin        : 0


/* Button on Right */
.ts.action.input:not([class*="left action"]) > 
    &
        input, textarea, *[contenteditable]
            border-top-right-radius   : 0px !important
            border-bottom-right-radius: 0px !important
            border-right-color        : transparent !important

.ts.action.input:not([class*="left action"]) > .dropdown:not(:first-child),
.ts.action.input:not([class*="left action"]) > .button:not(:first-child),
.ts.action.input:not([class*="left action"]) > .buttons:not(:first-child) > .button 
    border-radius: 0px

/* [Input][Button][>X<] */
.ts.action.input:not([class*="left action"]) > .dropdown:last-child,
.ts.action.input:not([class*="left action"]) > .button:last-child,
.ts.action.input:not([class*="left action"]) > .buttons:last-child > .button 
    border-radius: 0px $input_borderRadius $input_borderRadius 0px

/* [Input][Button][>Dropdown<] */
.ts.action.input > .dropdown:last-child
    border-top-right-radius: $input_borderRadius
    border-bottom-right-radius: $input_borderRadius

/* [>Dropdown<][Input][Button] */
.ts.action.input > .dropdown:first-child
    border-top-right-radius: 0
    border-bottom-right-radius: 0

/* [Dropdown][>Input<][Button] */
.ts.action.input > .dropdown + input,
.ts.action.input > .dropdown + textarea,
.ts.action.input > .dropdown + *[contenteditable]
    border-top-left-radius: 0
    border-bottom-left-radius: 0
    border-left-color: transparent

/* Input Focus */
.ts.action.input:not([class*="left action"]) 
    &
        input:focus, textarea:focus, *[contenteditable]:focus
            border-right-color: $input_focusBorderColor !important

/* Button on Left */
.ts[class*="left action"].input >
    &
        input:focus, textarea:focus, *[contenteditable]:focus
            border-top-left-radius   : 0px !important
            border-bottom-left-radius: 0px !important
            border-left-color        : transparent !important

.ts[class*="left action"].input > .dropdown,
.ts[class*="left action"].input > .button,
.ts[class*="left action"].input > .buttons > .button 
    border-radius: 0px

.ts[class*="left action"].input > .dropdown:first-child,
.ts[class*="left action"].input > .button:first-child,
.ts[class*="left action"].input > .buttons:first-child > .button 
    border-radius: $input_borderRadius 0px 0px $input_borderRadius

/* Input Focus */
.ts[class*="left action"].input >
    &
        input:focus, textarea:focus, *[contenteditable]:focus
            border-left-color: $input_focusBorderColor !important

//-------------------//
//       Fluid       
//-------------------// 

.ts.input.fluid,
.ts.input.fluid input,
.ts.input.fluid textarea,
.ts.input.fluid *[contenteditable]
    width: 100%

//-------------------//
//      Loading       
//-------------------//

.ts.loading.loading.input > i.icon:before 
    position     : absolute
    content      : ''
    top          : 50%
    left         : 50%
    margin       : $loaderMargin
    width        : $loaderSize
    height       : $loaderSize
    border-radius: $circularRadius
    border       : $loaderLineWidth solid $loaderFillColor

.ts.loading.loading.input > i.icon:after 
    position: absolute
    content : ''
    top     : 50%
    left    : 50%
    margin  : $loaderMargin
    width   : $loaderSize
    height  : $loaderSize

    animation: button-spin $loaderSpeed linear
    animation-iteration-count: infinite

    border-radius: $circularRadius

    border-color: $loaderLineColor transparent transparent
    border-style: solid
    border-width: $loaderLineWidth

    box-shadow: 0px 0px 0px 1px transparent

//-------------------//
//       Icon       
//-------------------//

.ts.icon.input > i.icon 
    cursor       : default
    position     : absolute
    line-height  : 1
    text-align   : center
    top          : 0px
    right        : 0px
    margin       : 0em
    height       : 100%
    width        : $input_iconWidth
    opacity      : $input_iconOpacity
    border-radius: 0em $input_borderRadius $input_borderRadius 0em

.ts.icon.input > i.icon:not(.link) 
    pointer-events: none

.ts.icon.input input 
    padding-right: $input_iconMargin !important

.ts.icon.input > i.icon:before,
.ts.icon.input > i.icon:after 
    left      : 0
    position  : absolute
    text-align: center
    top       : 50%
    width     : 100%
    margin-top: $input_iconOffset

.ts.icon.input > i.link.icon 
    cursor: pointer

.ts.icon.input > i.circular.icon 
    top  : $input_circularIconVerticalOffset
    right: $input_circularIconHorizontalOffset

/* Left Icon Input */
.ts[class*="left icon"].input > i.icon 
    right        : auto
    left         : $input_borderWidth
    border-radius: $input_borderRadius 0em 0em $input_borderRadius

.ts[class*="left icon"].input > i.circular.icon 
    right: auto
    left : $input_circularIconHorizontalOffset

.ts[class*="left icon"].input > input 
    padding-left : $input_iconMargin !important
    padding-right: $input_horizontalPadding !important

/* Focus */
.ts.icon.input > input:focus ~ i.icon 
    opacity: 1

//-------------------//
//       Sizes       
//-------------------// 

.ts.mini.inputs .ts.input,
.ts.mini.input
    font-size: $relativeMini
.ts.tiny.inputs .ts.input,
.ts.tiny.input
    font-size: $relativeTiny
.ts.small.inputs .ts.input,
.ts.small.input
    font-size: $relativeSmall
.ts.medium.inputs .ts.input,
.ts.medium.input,
.ts.input
    font-size: $relativeMedium
.ts.large.inputs .ts.input,
.ts.large.input
    font-size: $relativeLarge
.ts.big.inputs .ts.input,
.ts.big.input
    font-size: $relativeBig
.ts.huge.inputs .ts.input,
.ts.huge.input
    font-size: $relativeHuge
.ts.massive.inputs .ts.input,
.ts.massive.input
    font-size: $relativeMassive

//*******************************//
//             Inputs
//*******************************//

.ts.inputs
    display: inline-block
    
.ts.inputs.fluid,
.ts.inputs.fluid .ts.input,
.ts.inputs.fluid .ts.input input,
.ts.inputs.fluid .ts.input textarea,
.ts.inputs.fluid .ts.input *[contenteditable]
    width  : 100%
    display: block
    
.ts.inputs.vertical .ts.input
    display: block
    
.ts.inputs.vertical .ts.input:last-child:not(:first-child)
    &
        input, textarea, *[contenteditable]
            border-top-right-radius: 0
            border-top-left-radius : 0
            
            &:focus
                position: relative 
                z-index : 2

.ts.inputs.vertical .ts.input:not(:first-child):not(:last-child)
    & 
        input, textarea, *[contenteditable]
            border-radius      : 0
            border-bottom-color: transparent
        
            &:focus
                //border-bottom-style: initial

.ts.inputs.vertical .ts.input:first-child:not(:last-child)
    &
        input, textarea, *[contenteditable]
            border-bottom-right-radius: 0
            border-bottom-left-radius : 0
            border-bottom-color: transparent
            
            &:focus
                //border-bottom-color: initial

//-------------------//
//      Disabled       
//-------------------//

.ts.input.disabled,
.ts.input input[disabled]
    opacity       : $disabledOpacity
    pointer-events: none

//-------------------//
//       Error       
//-------------------//

.ts.input.error,
.ts.form .field.error,
.ts.input.negative,
.ts.form .field.negative
    &
        input, textarea, *[contenteditable]
            +input-variant($input_errorTextColor, $input_errorBackgroundColor, $input_errorBorderColor, $input_errorHoverBorderColor, $input_errorFocusBorderColor)
            
            background-image: $input_errorIconURL

//-------------------//
//      Warning       
//-------------------//

.ts.input.warning,
.ts.form .field.warning
    &
        input, textarea, *[contenteditable]
            +input-variant($input_warningTextColor, $input_warningBackgroundColor, $input_warningBorderColor, $input_warningHoverBorderColor, $input_warningFocusBorderColor)

            background-image: $input_warningIconURL

//-------------------//
//      Success       
//-------------------//

.ts.input.success,
.ts.form .field.success,
.ts.input.positive,
.ts.form .field.positive
    &
        input, textarea, *[contenteditable]
            +input-variant($input_successTextColor, $input_successBackgroundColor, $input_successBorderColor, $input_successHoverBorderColor, $input_successFocusBorderColor)

            background-image: $input_successIconURL

//-------------------//
//   Common Styles 
//-------------------//

.ts.input.error,
.ts.form .field.error,
.ts.input.negative,
.ts.form .field.negative,
.ts.input.warning,
.ts.form .field.warning,
.ts.input.success,
.ts.form .field.success,
.ts.input.positive,
.ts.form .field.positive,
    &
        input, textarea, *[contenteditable]    
            padding-right      : $input_iconPaddingRight
            background-repeat  : no-repeat
            background-position: center right $input_backgroundIconPaddingRight
            background-size    : $input_iconSize $input_iconSize
            
            &::-webkit-input-placeholder
                font-weight: normal
                opacity    : $input_placeholderOpacity

            &:-moz-placeholder,
            &:-ms-input-placeholder
                font-weight: normal
                opacity    : $input_placeholderOpacity
    
    &
        input:focus, textarea:focus, *[contenteditable]:focus

            &::-webkit-input-placeholder
                opacity    : $input_placeholderFocusOpacity

            &:-moz-placeholder,
            &:-ms-input-placeholder
                opacity    : $input_placeholderFocusOpacity
                
    &.focus input,
    &.focus textarea,
    &.focus *[contenteditable]
        &::-webkit-input-placeholder
            opacity    : $input_placeholderFocusOpacity
            
        &:-moz-placeholder,
        &:-ms-input-placeholder
            opacity    : $input_placeholderFocusOpacity
            
//-------------------//
//      Emphasis       
//-------------------//

.ts.inverted.primary.input
    &
        input, textarea, *[contenteditable]
            +input-variant($input_invertedPrimaryTextColor, $input_invertedPrimaryBackgroundColor, $input_invertedPrimaryBorderColor, $input_invertedPrimaryHoverBorderColor, $input_invertedPrimaryFocusBorderColor)
.ts.inverted.info.input
    &
        input, textarea, *[contenteditable]
            +input-variant($input_invertedInfoTextColor, $input_invertedInfoBackgroundColor, $input_invertedInfoBorderColor, $input_invertedInfoHoverBorderColor, $input_invertedInfoFocusBorderColor)
.ts.inverted.warning.input
    &
        input, textarea, *[contenteditable]
            +input-variant($input_invertedWarningTextColor, $input_invertedWarningBackgroundColor, $input_invertedWarningBorderColor, $input_invertedWarningHoverBorderColor, $input_invertedWarningFocusBorderColor)
.ts.inverted.positive.input
    &
        input, textarea, *[contenteditable]
            +input-variant($input_invertedPositiveTextColor, $input_invertedPositiveBackgroundColor, $input_invertedPositiveBorderColor, $input_invertedPositiveHoverBorderColor, $input_invertedPositiveFocusBorderColor)
.ts.inverted.negative.input
    &
        input, textarea, *[contenteditable]
            +input-variant($input_invertedNegativeTextColor, $input_invertedNegativeBackgroundColor, $input_invertedNegativeBorderColor, $input_invertedNegativeHoverBorderColor, $input_invertedNegativeFocusBorderColor)
.ts.inverted.input:not(.primary):not(.info):not(.warning):not(.positive):not(.negative)
    &
        input, textarea, *[contenteditable]
            +input-variant($input_invertedTextColor, $input_invertedBackgroundColor, $input_invertedBorderColor, $input_invertedHoverBorderColor, $input_invertedFocusBorderColor)

//-------------------//
//      Labeled       
//-------------------//

.ts.labeled.input > .label 
    flex     : 0 0 auto
    margin   : 0
    font-size: $relativeMedium

.ts.labeled.input > .label:not(.corner) 
    padding-top   : $input_verticalPadding
    padding-bottom: $input_verticalPadding

/* Regular Label on Left */
.ts.labeled.input:not([class*="corner labeled"]) .label:first-child 
    border-top-right-radius   : 0px
    border-bottom-right-radius: 0px

.ts.labeled.input:not([class*="corner labeled"]) .label:first-child + input 
    border-top-left-radius   : 0px
    border-bottom-left-radius: 0px
    border-left-color        : transparent

.ts.labeled.input:not([class*="corner labeled"]) .label:first-child + input:focus 
    border-left-color: $input_focusBorderColor

/* Regular Label on Right */
.ts[class*="right labeled"].input input 
    border-top-right-radius   : 0px !important
    border-bottom-right-radius: 0px !important
    border-right-color        : transparent !important

.ts[class*="right labeled"].input input + .label 
    border-top-left-radius: 0px
    border-bottom-left-radius: 0px

.ts[class*="right labeled"].input input:focus 
    border-right-color: $input_focusBorderColor !important

//-------------------//
//   Labeled Action
//-------------------//

/* [Input][>Label<][Button] */
.ts[class*="right labeled"].action.input:not([class*="left action"]) > input + .label,
.ts[class*="right labeled"].action.input:not([class*="left action"]) > textarea + .label,
.ts[class*="right labeled"].action.input:not([class*="left action"]) > *[contenteditable] + .label
    border-right-color: transparent
    border-radius: 0

//.ts[class*="right labeled"][class*="left action"].input > button + .label
//    border-left-color: transparent
//    border-right-color: transparent
//    border-radius: 0
// This works the same as below

/* [Button][>Label<][Input] */
.ts.labeled[class*="left action"].input > button + .label
    border-left-color: transparent
    border-right-color: transparent
    border-radius: 0

/* [Button][Label][>Input<] */
.ts.labeled[class*="left action"].input:not([class*="right labeled"]) > input,
.ts.labeled[class*="left action"].input:not([class*="right labeled"]) > textarea,
.ts.labeled[class*="left action"].input:not([class*="right labeled"]) > *[contenteditable]
    border-radius: 0
    border-top-right-radius: $input_borderRadius
    border-bottom-right-radius: $input_borderRadius

/* [Button][>Input<][Label] */
.ts[class*="right labeled"][class*="left action"].input > input,
.ts[class*="right labeled"][class*="left action"].input > textarea,
.ts[class*="right labeled"][class*="left action"].input > *[contenteditable]
    border-radius: 0

//-------------------//
//      Resizable
//-------------------//

.ts.resizable input,
.ts.resizable textarea,
.ts.resizable *[contenteditable],
.ts.form .resizable.field input,
.ts.form .resizable.field textarea,
.ts.form .resizable.field *[contenteditable]
    resize: both

//-------------------//
//      Circular
//-------------------//

.ts.input.circular
    &
        input, textarea, *[contenteditable]
            border-radius: 10em

//-------------------//
//       Aligns
//-------------------//

.ts.input.centered
    margin: 0 auto